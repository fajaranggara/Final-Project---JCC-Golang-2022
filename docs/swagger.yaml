definitions:
  controllers.AddGameInput:
    properties:
      category_id:
        type: integer
      description:
        type: string
      genre_id:
        type: integer
      image_url:
        type: string
      name:
        type: string
    type: object
  controllers.CategoryInput:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  controllers.ChangePasswordInput:
    properties:
      current_password:
        type: string
      new_password:
        type: string
    required:
    - current_password
    - new_password
    type: object
  controllers.GenreInput:
    properties:
      name:
        type: string
    type: object
  controllers.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.RegisPublisherInput:
    properties:
      logo_url:
        type: string
    type: object
  controllers.RegisterInput:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  controllers.ReviewInput:
    properties:
      content:
        type: string
      rate:
        type: integer
    type: object
  controllers.UpdateGameInput:
    properties:
      category_id:
        type: integer
      description:
        type: string
      genre_id:
        type: integer
      image_url:
        type: string
      name:
        type: string
    type: object
  models.Bookmark:
    properties:
      created_at:
        type: string
      game_name:
        type: string
      id:
        type: integer
      id_game:
        type: integer
      image_url:
        type: string
      ratings:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.Category:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Game:
    properties:
      category_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      genre_id:
        type: integer
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      publisher_id:
        type: integer
      ratings:
        type: integer
      ratings_counter:
        type: integer
      release_date:
        type: string
      updated_at:
        type: string
    type: object
  models.Genre:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.InstalledGames:
    properties:
      created_at:
        type: string
      game_name:
        type: string
      id:
        type: integer
      id_game:
        type: integer
      image_url:
        type: string
      ratings:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.Publisher:
    properties:
      created_at:
        type: string
      id:
        type: integer
      logo_url:
        type: string
      name:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.Review:
    properties:
      content:
        type: string
      created_at:
        type: string
      game_id:
        type: integer
      id:
        type: integer
      rate:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /admin/add-categories:
    post:
      description: Only admin have permission to create category
      parameters:
      - description: the body to create new category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CategoryInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
      security:
      - BearerToken: []
      summary: Add a new category
      tags:
      - Admin
  /admin/add-genres:
    post:
      description: Only admin have permission to create genre
      parameters:
      - description: the body to create new genre
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.GenreInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Genre'
      security:
      - BearerToken: []
      summary: Add a new genre
      tags:
      - Admin
  /admin/categories/{id}:
    delete:
      description: Only admin have permission to delete category
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Category Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Delete existing category by id
      tags:
      - Admin
    patch:
      description: Only admin have permission to update category
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Category Id
        in: path
        name: id
        required: true
        type: string
      - description: the body to create new category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CategoryInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
      security:
      - BearerToken: []
      summary: Update existing category by id
      tags:
      - Admin
  /admin/genres/{id}:
    delete:
      description: Only admin have permission to delete genre
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Genre Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Delete existing genre by id
      tags:
      - Admin
    patch:
      description: Only admin have permission to update genre
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Genre Id
        in: path
        name: id
        required: true
        type: string
      - description: the body to create new genre
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.GenreInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Genre'
      security:
      - BearerToken: []
      summary: Update existing genre by id
      tags:
      - Admin
  /categories:
    get:
      description: Get list of category tags
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
      summary: Show all category tags
      tags:
      - Public
  /categories/{id}/games:
    get:
      description: Get all games in spesific category
      parameters:
      - description: Category Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Game'
            type: array
      summary: Show list of games in specific category by category_id
      tags:
      - Public
  /change-password:
    patch:
      description: Used by User, Publisher, or Admin for change password account.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to change user password
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.ChangePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Change password account.
      tags:
      - Authentication & Authorization
  /games:
    get:
      description: Get list of game
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Game'
            type: array
      summary: Show all game
      tags:
      - Public
  /games/{id}:
    get:
      description: Get one game
      parameters:
      - description: Game Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Game'
      summary: Show specific game by id
      tags:
      - Public
  /games/{id}/bookmark:
    post:
      description: Only current login user can access this bookmark
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Game Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Bookmark'
      security:
      - BearerToken: []
      summary: Add this game into bookmark
      tags:
      - Games
  /games/{id}/install:
    patch:
      description: User installing games
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Game Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InstalledGames'
      security:
      - BearerToken: []
      summary: Install a games
      tags:
      - Games
  /games/{id}/review:
    post:
      description: Create new review and rate(1-5)
      parameters:
      - description: the body to create new review
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.ReviewInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Game Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
      security:
      - BearerToken: []
      summary: Add review into this game
      tags:
      - Games
  /games/{id}/reviews:
    get:
      description: Get all reviews of spesific games
      parameters:
      - description: Game Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      summary: Show all review of specific games by game_id
      tags:
      - Public
  /genres:
    get:
      description: Get list of genre
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Genre'
            type: array
      summary: Show all genre tags
      tags:
      - Public
  /genres/{id}/games:
    get:
      description: Get all games of spesific genre
      parameters:
      - description: Genre Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Game'
            type: array
      summary: Show list of game in specific genre by genre_id
      tags:
      - Public
  /login:
    post:
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login for user, publisher, or admin.
      tags:
      - Authentication & Authorization
  /profiles:
    get:
      description: Get user, publisher, or admin info
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Get info of current login account
      tags:
      - Authentication & Authorization
  /publisher/add-games:
    post:
      description: Only publisher have permission to publish a games
      parameters:
      - description: the body to create new games
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.AddGameInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Game'
      security:
      - BearerToken: []
      summary: Publish a new game
      tags:
      - Publisher
  /publisher/games/{id}:
    delete:
      description: Only publisher have permission to delete this game
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Game Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Delete published game by id
      tags:
      - Publisher
    patch:
      description: Only publisher have permission to update this game
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Game Id
        in: path
        name: id
        required: true
        type: string
      - description: the body to create new game
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateGameInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Game'
      security:
      - BearerToken: []
      summary: Update published game by id
      tags:
      - Publisher
  /publishers:
    get:
      description: Get list of publisher
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Publisher'
            type: array
      summary: Show all publisher
      tags:
      - Public
  /publishers/{id}/games:
    get:
      description: Get all games of spesific publisher by id
      parameters:
      - description: Publisher Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Game'
            type: array
      summary: Show all game published by specific publisher
      tags:
      - Public
  /regist-admin:
    patch:
      description: Create an account before chhange your role. User or Publisher can
        change into this role (temporary)
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to become admin
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisPublisherInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Change role into admin.
      tags:
      - Authentication & Authorization
  /regist-publisher:
    patch:
      description: Create an account before change your role into publisher. User
        or Admin can change into this role (temporary)
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to become publisher
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisPublisherInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Change role into publisher.
      tags:
      - Authentication & Authorization
  /register:
    post:
      description: 'Create account, role: user.'
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Create an account.
      tags:
      - Authentication & Authorization
  /users/bookmarks:
    get:
      description: Get all games in current users bookmark
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Bookmark'
            type: array
      security:
      - BearerToken: []
      summary: Show listed games in bookmark
      tags:
      - Users
  /users/bookmarks/{id}:
    delete:
      description: Only user who have permission can delete this bookmark
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Bookmark Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Delete games from this users bookmark
      tags:
      - Users
  /users/games/reviews/{id}:
    delete:
      description: Only user who create this review have permission to update
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Review Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Delete review created by this user
      tags:
      - Users
    patch:
      description: Only user who create this review have permission to update
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Review Id
        in: path
        name: id
        required: true
        type: string
      - description: the body to create new review
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.ReviewInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
      security:
      - BearerToken: []
      summary: Update review created by this user
      tags:
      - Users
  /users/installed/{id}:
    delete:
      description: Only user who have permission can uninstall this game
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: InstalledGames Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerToken: []
      summary: Uninstall a games
      tags:
      - Users
  /users/my-games:
    get:
      description: Get all installed games by user
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.InstalledGames'
            type: array
      security:
      - BearerToken: []
      summary: Get list of installed games by this user
      tags:
      - Users
swagger: "2.0"
