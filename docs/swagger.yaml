definitions:
  controllers.AddReviewInput:
    properties:
      content:
        type: string
      rate:
        type: integer
      user_id:
        type: integer
    type: object
  controllers.CategoryInput:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  controllers.ChangePasswordInput:
    properties:
      current_password:
        type: string
      new_password:
        type: string
    required:
    - current_password
    - new_password
    type: object
  controllers.GameInput:
    properties:
      category_id:
        type: integer
      description:
        type: string
      genre_id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      publisher_id:
        type: integer
      release_date:
        type: string
    type: object
  controllers.GenreInput:
    properties:
      name:
        type: string
    type: object
  controllers.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.PublisherInput:
    properties:
      image_url:
        type: string
      name:
        type: string
    type: object
  controllers.RegisterInput:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  controllers.UpdateReviewInput:
    properties:
      content:
        type: string
      rate:
        type: integer
    type: object
  models.Bookmark:
    properties:
      created_at:
        type: string
      game_name:
        type: string
      id:
        type: integer
      id_game:
        type: integer
      image_url:
        type: string
      ratings:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.Category:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Game:
    properties:
      category_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      genre_id:
        type: integer
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      publisher_id:
        type: integer
      ratings:
        type: integer
      ratings_counter:
        type: integer
      release_date:
        type: string
      updated_at:
        type: string
    type: object
  models.Genre:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Publisher:
    properties:
      created_at:
        type: string
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Review:
    properties:
      content:
        type: string
      created_at:
        type: string
      game_id:
        type: integer
      id:
        type: integer
      rate:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /categories:
    get:
      description: Get list of category
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
      summary: Get all category
      tags:
      - Public
    post:
      description: Only admin have permission to create category
      parameters:
      - description: the body to create new category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CategoryInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
      security:
      - BearerToken: []
      summary: Create a new category
      tags:
      - Admin
  /categories/{id}:
    delete:
      description: Only admin have permission to delete category
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Category Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete existing category by id
      tags:
      - Admin
    patch:
      description: Only admin have permission to update category
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Category Id
        in: path
        name: id
        required: true
        type: string
      - description: the body to create new category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CategoryInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
      security:
      - BearerToken: []
      summary: Update existing category by id
      tags:
      - Admin
  /categories/{id}/games:
    get:
      description: Get all games of spesific category by id
      parameters:
      - description: Category Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Game'
            type: array
      summary: Get list of games in specific category
      tags:
      - Find Games By
  /games:
    get:
      description: Get list of Game
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Game'
            type: array
      summary: Get all Game
      tags:
      - Public
    post:
      description: Only admin have permission to create publisher
      parameters:
      - description: the body to create new game
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.GameInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Game'
      security:
      - BearerToken: []
      summary: Create a new game
      tags:
      - Admin
  /games/:id/add-reviews:
    post:
      description: Create new review
      parameters:
      - description: the body to create new review
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.AddReviewInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Games Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
      security:
      - BearerToken: []
      summary: Create a review
      tags:
      - Games
  /games/:id/add-to-bookmark:
    patch:
      description: User add games to bookmark
      parameters:
      - description: the body to add games into bookmark
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.AddReviewInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Game Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Bookmark'
      security:
      - BearerToken: []
      summary: Bookmarked games
      tags:
      - Games
  /games/{id}:
    delete:
      description: Only admin have permission to delete game
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Game Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete existing game by id
      tags:
      - Admin
    get:
      description: Get one game by id
      parameters:
      - description: Game Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Game'
      summary: Get Game by id
      tags:
      - Public
    patch:
      description: Only admin have permission to update game
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Game Id
        in: path
        name: id
        required: true
        type: string
      - description: the body to create new game
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.GameInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Game'
      security:
      - BearerToken: []
      summary: Update existing game by id
      tags:
      - Admin
  /games/{id}/reviews:
    get:
      description: Get all reviews of spesific games
      parameters:
      - description: Games Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      summary: Get reviews of specific games
      tags:
      - Public
  /genres:
    get:
      description: Get list of genre
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Genre'
            type: array
      summary: Get all genre
      tags:
      - Public
    post:
      description: Only admin have permission to create genre
      parameters:
      - description: the body to create new genre
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.GenreInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Genre'
      security:
      - BearerToken: []
      summary: Create a new genre
      tags:
      - Admin
  /genres/{id}:
    delete:
      description: Only admin have permission to delete genre
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Genre Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete existing genre by id
      tags:
      - Admin
    patch:
      description: Only admin have permission to update genre
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Genre Id
        in: path
        name: id
        required: true
        type: string
      - description: the body to create new genre
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.GenreInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Genre'
      security:
      - BearerToken: []
      summary: Update existing genre by id
      tags:
      - Admin
  /genres/{id}/games:
    get:
      description: Get all games of spesific genre by id
      parameters:
      - description: Genre Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Game'
            type: array
      summary: Get list of games in specific genre
      tags:
      - Find Games By
  /login:
    post:
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Login as an user.
      tags:
      - Auth
  /publishers:
    get:
      description: Get list of publisher
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Publisher'
            type: array
      summary: Get all publisher
      tags:
      - Public
    post:
      description: Only admin have permission to create publisher
      parameters:
      - description: the body to create new publisher
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.PublisherInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Publisher'
      security:
      - BearerToken: []
      summary: Create a new publisher
      tags:
      - Admin
  /publishers/{id}:
    delete:
      description: Only admin have permission to delete publisher
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Publisher Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete existing publisher by id
      tags:
      - Admin
    patch:
      description: Only admin have permission to update publisher
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Publisher Id
        in: path
        name: id
        required: true
        type: string
      - description: the body to create new publisher
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.PublisherInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Publisher'
      security:
      - BearerToken: []
      summary: Update existing publisher by id
      tags:
      - Admin
  /publishers/{id}/games:
    get:
      description: Get all games of spesific publisher by id
      parameters:
      - description: Publisher Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Game'
            type: array
      summary: Get list of games in specific publisher
      tags:
      - Find Games By
  /register:
    post:
      description: registering a user from public access.
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a user.
      tags:
      - Auth
  /reviews/{id}:
    delete:
      description: Only user who create this review have permission to update
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Review Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete existing review by id
      tags:
      - Games
    patch:
      description: Only user who create this review have permission to update
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Review Id
        in: path
        name: id
        required: true
        type: string
      - description: the body to create new review
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateReviewInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
      security:
      - BearerToken: []
      summary: Update existing review by id
      tags:
      - Games
  /users/bookmarks:
    get:
      description: Get all games in users bookmark
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Bookmark'
            type: array
      security:
      - BearerToken: []
      summary: Get list of bookmarked games
      tags:
      - Users
  /users/bookmarks/{id}:
    delete:
      description: Only user who have permission can delete this bookmark
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: Bookmark Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      security:
      - BearerToken: []
      summary: Delete games in users bookmark
      tags:
      - Users
  /users/change-password:
    patch:
      description: renew users password.
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      - description: the body to change user password
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.ChangePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Change users password.
      tags:
      - Users
  /users/profiles:
    get:
      description: Get logged in user info
      parameters:
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerToken: []
      summary: Get info of current login user
      tags:
      - Users
swagger: "2.0"
